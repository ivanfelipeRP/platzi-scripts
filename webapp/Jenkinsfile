pipeline {
  agent any

  options {
    timeout(time: 2, unit: 'MINUTES')
  }

  environment {
    // Cambiar el nombre del repositorio Docker al tuyo
    ARTIFACT_ID = "ivanfeliperp/webapp:${env.BUILD_NUMBER}"
  }

  stages {
    stage('Build') {
      steps {
        script {
          dir("webapp") {
            // Construye la imagen Docker usando el Dockerfile en webapp/
            dockerImage = docker.build("${env.ARTIFACT_ID}")
          }
        }
      }
    }

    stage('Run tests') {
      steps {
        // Ejecuta los tests dentro del contenedor
        sh "docker run ${dockerImage.id} npm test"
      }
    }

    stage('Publish') {
      when {
        // Se ejecuta solo en la rama main (GitHub moderno)
        branch 'main'
      }
      steps {
        script {
          docker.withRegistry('', 'DockerHubCredentials') {
            dockerImage.push()
          }
        }
      }
    }

    stage('Schedule Staging Deployment') {
      when {
        branch 'main'
      }
      steps {
        build job: 'deploy-webapp-staging', parameters: [
          string(name: 'ARTIFACT_ID', value: "${env.ARTIFACT_ID}")
        ], wait: false
      }
    }
  }

  post {
    failure {
      echo "La build falló. Revisa los logs para más información."
    }
  }
}
