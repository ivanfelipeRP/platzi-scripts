pipeline {
  agent any

  options {
    timeout(time: 2, unit: 'MINUTES')
  }

  environment {
    ARTIFACT_ID = "elbuo8/webapp:${env.BUILD_NUMBER}"
  }

  stages {

    stage('Checkout') {
      steps {
        checkout scm
        script {
          echo "Branch actual: ${env.BRANCH_NAME ?: env.GIT_BRANCH ?: 'NO DEFINIDO'}"
        }
      }
    }

    stage('Build') {
      steps {
        script {
          dir("webapp") {
            // Declaración explícita de dockerImage para evitar advertencias
            def dockerImage = docker.build(env.ARTIFACT_ID)
            env.DOCKER_IMAGE_ID = dockerImage.id
          }
        }
      }
    }

    stage('Run tests') {
      steps {
        sh "docker run ${env.DOCKER_IMAGE_ID} npm test"
      }
    }

    stage('Publish') {
      when {
        expression { 
          return env.BRANCH_NAME == 'master' || env.GIT_BRANCH == 'master' 
        }
      }
      steps {
        script {
          docker.withRegistry("", "DockerHubCredentials") {
            docker.image(env.ARTIFACT_ID).push()
          }
        }
      }
    }

    stage('Schedule Staging Deployment') {
      when {
        expression { 
          return env.BRANCH_NAME == 'master' || env.GIT_BRANCH == 'master' 
        }
      }
      steps {
        build job: 'deploy-webapp-staging', parameters: [
          string(name: 'ARTIFACT_ID', value: env.ARTIFACT_ID)
        ], wait: false
      }
    }
  }
}
